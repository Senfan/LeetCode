12ms

class Solution {
public:
    int hammingWeight(uint32_t n) {
        int i = 1;
        int re = 0;
        
        for(int j = 0; j < 32; j++) {
            if(n & (i << j)) re++;
        }
        
        return re;
    }
};

16ms
public:
    int hammingWeight(uint32_t n) {
        int i = 1;
        int re = 0;
        
        for(int j = 0; j < 32; j++) {
            if(n & i) re++;
			i <<= 1;
        }
        
        return re;
    }
};

//2015年7月20日20:32:38
//4ms
class Solution {
public:
    int hammingWeight(uint32_t n) {
        int re = 0;
        while(n) {
            re++;
            n &= (n-1);
        }
        return re;
    }
};