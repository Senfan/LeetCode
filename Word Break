class Solution {
public:
    bool wordBreak(string s, unordered_set<string>& wordDict) {
        if(s.empty()) return false;
        int len = s.size();
        bool *dp = new bool[len+1];
        memset(dp, 0, (len+1)*sizeof(bool));
        dp[0] = 1;
        for(int i = 0; i <= len; i++) {
            for(int j = 0; j < i; j++) {
                if(dp[j] && wordDict.count(s.substr(j, i-j))) {
                    dp[i] = 1;
                    break;
                }
            }
        }
        return dp[len];
    }
};