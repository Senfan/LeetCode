class Solution {
public:
    string numberToWords(int num) {
        if(num == 0) return "Zero";
        unordered_map<int, string> map;
        map[1] = "One", map[2] = "Two", map[3] = "Three", map[4] = "Four", map[5] = "Five";
        map[6] = "Six", map[7] = "Seven", map[8] = "Eight", map[9] = "Nine", map[10] = "Ten";
        map[11] = "Eleven", map[12] = "Twelve", map[13] = "Thirteen", map[14] = "Fourteen", map[15] = "Fifteen";
        map[16] = "Sixteen", map[17] = "Seventeen", map[18] = "Eighteen", map[19] = "Nineteen";
        map[20] = "Twenty", map[30] = "Thirty", map[40] = "Forty", map[50] = "Fifty", map[60] = "Sixty", map[70] = "Seventy";
        map[80] = "Eighty", map[90] = "Ninety";
        string res = "";

        if(num >= pow(10, 9)) {
            res += numString(num / pow(10, 9), map) + " " + "Billion";
            num %= (int)pow(10, 9);
        }

        if(num >= pow(10, 6)) {
            if(res.size() > 0) res += " ";
            res += numString(num / pow(10, 6), map) + " " + "Million";
            num %= (int)pow(10, 6);
        }

        if(num >= pow(10, 3)) {
            if(res.size() > 0) res += " ";
            res += numString(num / pow(10, 3), map) + " " + "Thousand";
            num %= (int)pow(10, 3);
        }

        if(num > 0) {
            if(res.size() > 0) res += " ";
            res += numString(num, map);
        }

        return res;
    }

    string numString(int num, unordered_map<int, string> &map) {
        string res = "";
        if(num > 99) {
            res = map[num / 100] + " " + "Hundred";
            num = num % 100;
        }

        if(num > 9) {
            if(res.size() > 0) res += " ";
            if(num < 20) return res += map[num];
            else {
                res += map[num / 10 * 10];
                num %= 10;
            }
        }

        if(num > 0) {
            if(res.size() > 0) res += " ";
            res += map[num];
        }

        return res;
    }
};
