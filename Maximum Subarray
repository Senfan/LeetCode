O(n) 18ms :较慢
class Solution {
public:
    int maxSubArray(int A[], int n) {
        int tSum = INT_MIN;
        int sum = INT_MIN;
        int cur = 0;
        
        while(cur < n) {
            if(A[cur] > tSum && tSum < 0) {
                tSum = A[cur];
            }else {
                tSum += A[cur];
            }
            if(tSum >sum){
                sum = tSum;
            }
            cur++;
        }
        return sum;
    }
};

//8ms
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int len = nums.size();
        if(!len) return 0;
        if(len == 1) return nums[0];
        int sum = nums[0], res = nums[0];
        for(int i = 1; i < len; i++) {
            if(sum <= 0) {
                sum = nums[i];
                res = max(res, sum);
            }else {
                sum += nums[i];
                res = max(res, sum);
            }
        }
        
        return res;
    }
};