class Solution {
public:
    vector<int> grayCode(int n) {
        int cnt = pow(2, n);
        unordered_map<int, bool> mark;
        int count = 1;
        vector<int> res;
        res.push_back(0);
        int cur = 0;
        mark[0] = 1;
        int tmp;
        while(count < cnt) {
            for(int i = 0; i < n; i++) {
                tmp = cur ^ (1 << i);
                if(mark[tmp] == false) {
                    mark[tmp] = true;
                    res.push_back(tmp);
                    count++;
                    cur = tmp;
                    break;
                }
            }
        }
        return res;
    }
};

//S 暴力枚举 TLE
class Solution {
public:
    vector<int> grayCode(int n) {
        vector<int> res;
        vector<int> mark(pow(2, n), 0);
        if(n == 0) return res;
        res.push_back(0);
        res.push_back(1);
        int cnt = 2;
        int curNum = 1;
        while(cnt < pow(2, n)) {
            for(int i = 2; i < pow(2, n); i++) {
                int x = curNum ^ i;
                if(mark[i] == 0 && (x & (x-1)) == 0) {
                    res.push_back(i);
                    curNum = i;
                    cnt++;
                    mark[i] = 1;
                    break;
                }
            }
        }
        return res;
    }
};