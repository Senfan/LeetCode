class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        if(m == n) return n;
        int bits = 0;
        while(m != n) {
            m >>= 1;
            n >>= 1;
            bits++;
        }
        return m <<= bits;
    }
};

//进一步优化：编程之美====看了一遍书，为什么原理没有用起来，就是因为自己掌握的不够深刻，不能灵活变通，构建更为健壮的认知体系
//如若有不同的位数，则低位的各位都会遍历所有的数位，所以，可以相与计算，去除低位的1，因为低位都是0
class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        while(n > m) {
            n &= (n-1);
        }
        
        return n;
    }
};