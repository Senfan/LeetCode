class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int parNum = prerequisites.size();
        int *mark = new int[numCourses];
        memset(mark, 0, numCourses*sizeof(int));
        for(int i = 0; i < parNum; i++) {
            mark[prerequisites[i][1]]++;
        }
        
        queue<int> q;
        for(int i = 0; i < numCourses; i++) {
            if(!mark[i]) q.push(i);
        }
        int done = 0;
        while(!q.empty()) {
            int cour = q.front();
            q.pop();
            done++;
            for(int i = 0; i < parNum; i++) {
                if(prerequisites[i][0] == cour) {
                    mark[prerequisites[i][1]]--;
                    if(mark[prerequisites[i][1]] == 0) q.push(prerequisites[i][1]);
                }
            }
        }
        return done == numCourses;
    }
};