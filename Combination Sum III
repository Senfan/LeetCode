class Solution {
public:

    void backTrack(vector<vector<int>> &res, int k, int n, vector<int> &tmp, int cur) {
        if(k == 0 && n == 0) {
            res.push_back(tmp);
            return;
        }else if(k == 0 && n > 0) {
            return;
        }else if(k > 0 && n <= 0) {
            return;
        }

        for(int i = cur; i < 10 && i <= n; i++) {
            tmp.push_back(i);
            backTrack(res, k-1, n-i, tmp, i+1);
            tmp.pop_back();
        }
    }
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> res;
        vector<int> tmp;
        if(n == 0 || k == 0) return res;

        backTrack(res, k, n, tmp, 1);

        return res;
    }
};