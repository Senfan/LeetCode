//线性排序：计数、桶排序、基数排序，前两者互为特例，都是非基于比较的排序，最后一种利用前两者：线性排序主要用于特殊场合（有一定的范围等）
class Solution {
public:
    int maximumGap(vector<int> &num) {
        if(num.size() < 2)
            return 0;
        int maxNum = *max_element(num.begin(), num.end());
        int minNum = *min_element(num.begin(), num.end());
        //average gap from minNum to maxNum.
        int gap = (maxNum - minNum - 1) / (num.size() - 1) + 1;
        //number of buckets
        int bucketNum =(maxNum-minNum-1)/gap+1;
        vector<int> bucketsMin(bucketNum, INT_MAX);
        vector<int> bucketsMax(bucketNum, INT_MIN);
        //put into buckets
        for(int i = 0; i < num.size(); i ++)
        {
            if(num[i] != maxNum && num[i] != minNum)
            {
                int buckInd = (num[i]-minNum)/gap;
                bucketsMin[buckInd] = min(bucketsMin[buckInd], num[i]);
                bucketsMax[buckInd] = max(bucketsMax[buckInd], num[i]);
            }
        }
        int maxGap = INT_MIN;
        int previous = minNum;
        for(int i = 0; i < bucketNum; i ++)
        {
            if(bucketsMin[i] == INT_MAX && bucketsMax[i] == INT_MIN)
                continue;   //empty
            //i_th gap is minvalue in i+1_th bucket minus maxvalue in i_th bucket 
            maxGap = max(maxGap, bucketsMin[i]-previous);
            previous = bucketsMax[i];
        }
        maxGap = max(maxGap, maxNum-previous);
        return maxGap;
    }
};