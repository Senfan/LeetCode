class Solution {
public:
    bool isValid(string s) {
        int len = s.size();
        if(len == 0) return true;
        stack<char> stk;
        for(int i = 0; i < len; i++) {
            switch(s[i]) {
                case '(':
                case '[':
                case '{':
                    stk.push(s[i]);
                    break;
                case ')':
                    if(stk.empty() || stk.top() != '(') return false;
                    stk.pop();
                    break;
                case ']':
                    if(stk.empty() || stk.top() != '[') return false;
                    stk.pop();
                    break;
                case '}':
                    if(stk.empty() || stk.top() != '{') return false;
                    stk.pop();
                    break;
            }
        }
        return stk.empty();
    }
};

//0ms
class Solution {
public:
    bool isValid(string s) {
        int len = s.size();
        if(len & 1) return false;
        
        stack<char> stk;
        for(int i = 0; i < len; i++) 
            switch(s[i]) {
                case '(':
                case '{':
                case '[': stk.push(s[i]); break;
                case ')': 
                    if(stk.empty() || stk.top() != '(') return false;
                    else { stk.pop(); break; }
                case ']':
                    if(stk.empty() || stk.top() != '[') return false;
                    else { stk.pop(); break; }
                case '}':
                    if(stk.empty() || stk.top() != '{') return false;
                    else { stk.pop(); break; }
            }
        return stk.empty();
    }
};