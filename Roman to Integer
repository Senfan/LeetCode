class Solution {
public:
    int romanToInt(string s) {
        int len = s.size();
        int res = 0;
        
        for(int i = len - 1; i >= 0; i--) {
            switch(s[i]) {
                case 'I':
                    res += (res >= 5 ? -1 : 1);
                    break;
                case 'V':
                    res += 5;
                    break;
                case 'X':
                    res += (res >= 50 ? -10 : 10);
                    break;
                case 'L':
                    res += 50;
                    break;
                case 'C':
                    res += (res >= 500 ? -100 : 100);
                    break;
                case 'D':
                    res += 500;
                    break;
                case 'M':
                    res += 1000;
                    break;
            }
        }
        return res;
    }
};

//72ms
class Solution {
public:
    int romanToInt(string s) {
        if(s == "") return 0;
        
        unordered_map<char, int> map;
        map['I'] = 1, map['V'] = 5, map['X'] = 10;
        map['L'] = 50, map['C'] = 100, map['D'] = 500, map['M'] = 1000;
        
        int ind = s.size() - 1, res = 0, pre = 0;
        
        while(ind >= 0) {
            if(map[s[ind]] >= pre) {
                res += map[s[ind]];
            }else {
                res -= map[s[ind]];
            }
            pre = map[s[ind]];
            ind--;
        }
        return res;
    }
};