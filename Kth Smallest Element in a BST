/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        int res, cnt = 0;
        stack<TreeNode*> stk;
        TreeNode *p = root;
        stk.push(NULL);
        
        do {
            while(p) {
                stk.push(p);
                p = p -> left;
            }
            if(!stk.empty()) {
                p = stk.top();
                stk.pop();
                cnt++;
                if(cnt == k) return p -> val;
                p = p -> right;
            }
        }while(p != NULL || !stk.empty());
    }
};

//24ms
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        stack<TreeNode*> stk;
        TreeNode *curNode = root;
        int cnt = 0;
        while(curNode || !stk.empty()) {
            while(curNode) {
                stk.push(curNode);
                curNode = curNode -> left;
            }
            curNode = stk.top();
            cnt++;
            if(cnt == k) return curNode -> val;
            stk.pop();
            curNode = curNode -> right;
        }
    }
};