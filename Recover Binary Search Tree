class Solution {
public:
    void inOrder(TreeNode *root, TreeNode *&a, TreeNode *&b, TreeNode *&pre) {
        if(!root) return;
        
        inOrder(root -> left, a, b, pre);
        if(root -> val < pre -> val) {
            if(!a) a = pre;
            b = root;
        }
        pre = root;
        inOrder(root -> right, a, b, pre);
    }
    void recoverTree(TreeNode *root) {
        TreeNode *pre = new TreeNode(INT_MIN);
        
        TreeNode *a = NULL, *b = NULL;
        inOrder(root, a, b, pre);
        
        swap(a -> val, b -> val);
        return;
    }
};