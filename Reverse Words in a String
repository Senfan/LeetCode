//栈的操作还是比较耗费时间的
//10ms
class Solution {
public:
    void reverseWords(string &s) {

        int len = s.size();
        string tmp = "";
        stack<string> stk;
        for(int i = 0; i < len; i++) {
            if(s[i] == ' ' && tmp.empty()) continue;
            if(s[i] == ' ') {
                stk.push(tmp);
                tmp = "";
            }else {
                tmp += s[i];
            }
        }
        if(!tmp.empty()) stk.push(tmp);
        s = "";
        while(!stk.empty()) {
            tmp = stk.top();
            s.append(tmp + " ");
            stk.pop();
        }

        s = s.substr(0, s.size() - 1);
    }
};

//O(n) - 8ms; O(n)

class Solution {
public:
    void reverseWords(string &s) {
        if(s.empty()) return;
        string tmp = s;
        int size = s.size();
        s = "";
        string word = "";
        string sign = "";
        while((--size) >= 0) {
            if(tmp[size] != ' ') {
                word += tmp[size];
            }else{
                if(word.empty()) continue;
                reverse(word.begin(), word.end());
                s += (" " + word);
                word = "";
            }
        }
        if(!word.empty()) {
            reverse(word.begin(), word.end());
            s += (" " + word);
        }
        s += sign;
        if(s.empty()) return;
        s = s.substr(1);
    }
};