//116ms 问题应该主要花费在映射的查询上
class Solution {
public:
    string intToRoman(int num) {
        string res;
        unordered_map<int, string> map;
        map[1000] = "M", map[900] = "CM", map[800] = "DCCC", map[700] = "DCC", map[600] = "DC", map[500] = "D", map[400] = "CD", map[300] = "CCC", map[200] = "CC", map[100] = "C";
        map[90] = "XC", map[80] = "LXXX", map[70] = "LXX", map[60] = "LX", map[50] = "L", map[40] = "XL", map[30] = "XXX", map[20] = "XX", map[10] = "X";
        map[9] = "IX", map[8] = "VIII", map[7] = "VII", map[6] = "VI", map[5] = "V", map[4] = "IV", map[3] = "III", map[2] = "II", map[1] = "I";
        int tmp;
        while(num) {
            if(num >= 1000) {
                res += map[1000];
                num -= 1000;
            }else if(num >= 100){
                tmp = num / 100;
                res += map[tmp * 100];
                num -= tmp * 100;
            }else if(num >= 10) {
                tmp = num / 10;
                res += map[tmp*10];
                num -= tmp * 10;
            }else {
                res += map[num];
                num = 0;
            }
        }
        return res;
    }
};

//32ms
class Solution {
public:
    string intToRoman(int num) {
        string res;
        int tmpInt;
        while(num) {
            if(num >= 1000) {
                tmpInt = num / 1000;
                string tmp(tmpInt, 'M');
                res += tmp;
                num -= tmpInt * 1000;
            }else if(num >= 100) {
                tmpInt = num / 100;
                if(tmpInt == 9) {
                    res += "CM";
                    num -= 900;
                }else if(tmpInt >= 5) {
                    res += "D";
                    string tmp(tmpInt - 5, 'C');
                    res += tmp;
                    num -= tmpInt * 100;
                }else if(tmpInt == 4) {
                    res += "CD";
                    num -= 400;
                }else {
                    string tmp(tmpInt, 'C');
                    res += tmp;
                    num -= tmpInt * 100;
                }
            }else if(num >= 10) {
                tmpInt = num / 10;
                if(tmpInt == 9) {
                    res += "XC";
                    num -= 90;
                }else if(tmpInt >= 5) {
                    res += "L";
                    string tmp(tmpInt - 5, 'X');
                    res += tmp;
                    num -= tmpInt * 10;
                }else if(tmpInt == 4) {
                    res += "XL";
                    num -= 40;
                }else {
                    string tmp(tmpInt, 'X');
                    res += tmp;
                    num -= tmpInt * 10;
                }
            }else {
                if(num == 9) {
                    res += "IX";
                }else if(num >= 5) {
                    res += "V";
                    string tmp(num-5, 'I');
                    res += tmp;
                }else if(num == 4) {
                    res += "IV";
                }else {
                    string tmp(num, 'I');
                    res += tmp;
                }
                num = 0;
            }
        }
        return res;
    }
};
//56 ms
 class Solution {
public:
    string intToRoman(int num) {
        stringstream ss;
        ss.clear();
        ss  << num;
        string numS;
        ss >> numS;
        
        int len = numS.size();
        string res = "";
        if(len > 0) {
            switch(numS[len-1]) {
                case '1': res = "I"; break;
                case '2': res = "II";break;
                case '3': res = "III";break;
                case '4': res = "IV";break;
                case '5': res = "V";break;
                case '6': res = "VI";break;
                case '7': res = "VII";break;
                case '8': res = "VIII";break;
                case '9': res = "IX";break;
            }
        }
        len--;
        if(len > 0) {
            switch(numS[len-1]) {
                case '1': res = "X" + res; break;
                case '2': res = "XX" + res; break;
                case '3': res = "XXX" + res; break;
                case '4': res = "XL" + res; break;
                case '5': res = "L" + res; break;
                case '6': res = "LX" + res; break;
                case '7': res = "LXX" + res; break;
                case '8': res = "LXXX" + res; break;
                case '9': res = "XC" + res; break;
            }
        }
        len--;
        if(len > 0) {
            switch(numS[len-1]) {
                case '1': res = "C" + res; break;
                case '2': res = "CC" + res; break;
                case '3': res = "CCC" + res; break;
                case '4': res = "CD" + res; break;
                case '5': res = "D" + res; break;
                case '6': res = "DC" + res; break;
                case '7': res = "DCC" + res; break;
                case '8': res = "DCCC" + res; break;
                case '9': res = "CM" + res; break;
            }
        }
        len--;
        if(len > 0) {
            switch(numS[len-1]) {
                case '1': res = "M" + res; break;
                case '2': res = "MM" + res; break;
                case '3': res = "MMM" + res; break;
            }
        }
        return res;
    }
};


//28ms 从左到右是依次相加的，所以，是大数在左边 => 可以分别求各个位上的字符串！
class Solution {
public:
    string intToRoman(int num) {
        string t, h, ten, b;
        
        if(num >= 1000) {
            t = string(num / 1000, 'M');
        }
        
        num -= (num / 1000) * 1000;
        
        if(num >= 100) {
            switch(num / 100) {
                case 9: h = "CM"; break;
                case 8: h = "DCCC"; break;
                case 7: h = "DCC"; break;
                case 6: h = "DC"; break;
                case 5: h = "D"; break;
                case 4: h = "CD"; break;
                case 3: h = "CCC"; break;
                case 2: h = "CC"; break;
                case 1: h = "C"; break;
            }
            num -= num / 100 * 100;
        }
        
        if(num >= 10) {
            switch(num / 10) {
                case 9: ten = "XC"; break;
                case 8: 
                case 7:
                case 6:
                case 5: ten = "L" + string(num / 10 - 5, 'X'); break;
                case 4: ten = "XL"; break;
                case 3:
                case 2:
                case 1: ten = string(num / 10, 'X'); break;
            }
            num -= num / 10 * 10;
        }
        
        if(num >= 1) {
            switch(num) {
                case 9: b = "IX"; break;
                case 8:
                case 7:
                case 6:
                case 5: b = "V" + string(num - 5, 'I'); break;
                case 4: b = "IV"; break;
                case 3:
                case 2:
                case 1: b = string(num, 'I'); break;
            }
        }
        return t + h + ten + b;
    }
};