1 Min Stack:
	A. 数组初始化大小：
		若太大：runtime error
		若太小：可能Wrong error
		此题中取：100000 * 2 * 4B = 200 KB
	
2 Tow Sum:
	A. struct 可以声明在类内部
	
3 Add tow numbers:
	A. 用new申请的指针，如果不用，一定要delete掉
	B. 链表中尽量应用已存在节点，new，delete操作比较耗时间
	C. 超时可能是死循环
	D. delete会把相应内存释放掉，不管是不是还存在其他的引用，若存在其他引用，则该应用也无效
	
4 Number of 1 bits
	赋值操作比较耗时间
	
		i << j 	//比较快
		i <<= 1;
		
5 Combination 
	A. 递归分为单递归以及多分支递归，单递归单线直接调用即可。
	   多分支递归一般用For循环控制递归的分支数（广度）
	B. 排列组合建模（本质关系的映射）——集合的存储实现之一就是：位向量=》解决特定问题的时候，希望自己能够有一定的方法论作为指导：先去用数据结构建模
		栈+队列
		位向量（从另一个角度去构造解答树）：
			类似二进制，只是具体的操作方式不同，存贮一致。
		解答树：
			如果某问题的解可以有多个步骤得到，而每个步骤都有若干种选择（这些候选方案集可能依赖于先前做出的选择），且可以用枚举递归法实现，则它的工作方式可以用解答树来实现。
		位向量法二
			表示：0,1可以表示存不存在这个元素
			集合的操作：常见的集合运算都可以用位运算实现

6 Factorial Trailing Zeros
	A. 面对任何问题，纸笔先行，不要想当然的看问题。积极一点，认真去分析、思考，一点点搞清事实，从问题出发找解决思路，不要总是用经验套用，应该在	   分析问题的基础之上去调用经验这种工具，不应本末倒置。
	B. 本题分析的关键是什么时候产生0：任何一个数都可以表示为所有素数n次幂的乘积 =》只有2 & 5的乘积才能产生0！
	C. 刚开始，其实就把问题想复杂了，从而没有静下心来仔细思考。

7  Divide Two Integers
	A. TLE：在时间复杂度一定的情况下，注意检查循环是否有infinit loop。本题中就是因为左移运算定义为int，从而造成失误。
	B. 编译器大多不支持正负数数量对称。

8 Find Minimum in Rotated Sorted Array
	A. 就是这样，先有个整体的思考思路，然后沉下心来做。

9 Reverse Linked List II
	A. 链表要注意返回的指针，避免想当然：引用同一地址的两个变量各自维护自己的值。

10 3Sum:
	A. 纸笔先行才能发现具体的规律，仔细一点，把所有元素都列出来，更容易发现规律：如何快速找到满足条件的两个数：O(n^2) -> O(n); 借助排序。
