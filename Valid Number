class Solution {
public:

    bool isInt(string s) {
        if(s == "") return false;
        
        int sLen = s.size();
        int num = 0;
        for(int i = 0; i < sLen; i++) {
            if(!isdigit(s[i])) {
                if(i == 0 && (s[i] == '-' || s[i] == '+')) continue;
                else return false;
            }
            num++;
        }
        if(num > 0) return true;
        return false;
    }
    bool isNumber(string s) {
        int sLen = s.size();
        if(sLen == 0) return false;
        int dotNum = 0;

        while(s[0] == ' ') {
            sLen--;
            if(sLen == 0) return false;
            s = s.substr(1, sLen);
        }
        int end = sLen - 1;
        for(; end >= 0; end--) {
            if(s[end] == ' ') {
                sLen--;
                s = s.substr(0, sLen);
            }else break;
        }
        if(sLen == 0) return false;
        int eNum = 0;
        for(int j = 0; j < sLen; j++) {
            if(s[j] == 'e') eNum++;
            if(eNum > 1) return false;
        }
        int postNum = 0;
        bool tmp = false, tmp2 = false;
        int postSign = 0;
        for(int i = 0; i < sLen; i++) {
            if(!isdigit(s[i])) {
                if(s[i] == '.') {
                    dotNum++;
                    tmp = true;
                    if(dotNum > 1) return false;
                }else if(s[i] == 'e'){
                    if(postNum == 0) return false;
                    return isInt(s.substr(i+1, sLen - i));
                }else if(i == 0 && (s[i] == '-' || s[i] == '+')) {
                    tmp2 = true;
                }
                else return false;
            }else {
                if(tmp2) postSign++;
                postNum++;
            }
        }
        if(tmp && postNum == 0) return false;
        if(tmp2 && postSign == 0) return false;
        return true;
    }
};


//12ms
class Solution {
public:
    bool isNumber(string s) {
        if(s.empty()) return false;
        int sLen = s.size();
        int i = 0, j = sLen - 1;
        while(s[i] == ' ') i++;
        if(s[i] == '-' || s[i] == '+') i++;
        if(i == sLen) return false;
        while(s[j] == ' ') j--;
        bool dotExist = false, eExist = false, existH = false, existP = false, eH = false ,eP = false;
        for(; i <= j; i++) {
            if(s[i] == '.') {
                if(dotExist || (j == i && !existH) || eExist) return false;
                dotExist = true;
            }else if(s[i] == 'e') {
                if(eExist || s[j] == 'e' || !eH) return false;
                eExist = true;
                break;
            }else if(s[i] >= '0' && s[i] <= '9') {
                if(!dotExist) existH = true;
                else existP = true;
                if(!eH) eH = true;
                else eP = true;
            }else return false;
        }
        if(eExist) {
            i++;
            if(s[i] == '-' || s[i] == '+') {
                if(i >= j) return false;
                i++;
            }
            
            for(; i <= j; i++) {
                if(s[i] >= '0' && s[i] <= '9') continue;
                return false;
            }
        }
        
        return true;
    }
};