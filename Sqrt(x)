// 17ms
class Solution {
public:
    int sqrt(int x) {
        if(x == 0) return 0;
        double pre = 1;
       
        double cur = 1;
        
        do {
            pre = cur;
            cur = (pre + x/pre) / 2.0;
        }while(abs(cur - pre) > 0.00001);
        
        return cur;
    }
};

//二分法 12ms
class Solution {
public:
    int mySqrt(int x) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        unsigned long long begin = 0;
        unsigned long long end = (x+1)/2;
        unsigned long long mid;
        unsigned long long tmp;
        while(begin < end)
        {
            mid = begin + (end-begin)/2;
            tmp = mid*mid;
            if(tmp==x)return mid;
            else if(tmp<x) begin = mid+1;
            else end = mid-1;
        }
        tmp = end*end;
        if(tmp > x)
            return end-1;
        else
            return end;
    }
};