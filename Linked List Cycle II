/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head == NULL || head -> next == NULL || head -> next -> next == NULL) return NULL;
        ListNode *pre = head, *cur = head;
        while(1) {
            pre = pre -> next;
            if(cur -> next == NULL || cur -> next -> next == NULL) return NULL;
            cur = cur -> next -> next;
            if(pre == cur) break;
        }
        pre = head;
        while(pre != cur) {
            pre = pre -> next;
            cur = cur -> next;
        }
        return pre;
    }
};